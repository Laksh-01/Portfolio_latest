[
  {
    "title": "💸 FinTracker – AI-Powered Personal Finance Tracker",
    "description": "A full-stack finance tracking web app that allows users to manage income, expenses, and investments with real-time charts, AI insights, and future prediction capabilities.",
    "skills": ["React", "Prisma", "PostgreSQL", "Clerk", "ShadCN UI", "AI", "Chart.js"],
    "demo": "https://fintracker-gamma.vercel.app/",
    "source": "https://github.com/Laksh-01/FinTrack",
    "readme": "FinTracker is an AI-powered personal finance web application where users can create accounts, add transactions, track investments, and visualize financial data using interactive pie charts. AI features include scanning and classifying transactions, giving investment suggestions, and predicting future values using compound logic. The app features secure Clerk authentication, paginated transaction history, a dark/light theme UI, and an investment-support chatbot. Future plans include multi-currency support, goal tracking, and budgeting tips."
  }
  ,
  {
    "title": "AI-Powered Coding Assistant Chrome Extension",
    "description": "Built a context-aware Chrome extension using Gemini API for real-time coding help. Designed a sleek SPA UI with chat integration, prompt tuning, and chat history for improved user experience.",
    "skills": ["JS", "HTML", "CSS"],
    "demo": "https://www.youtube.com/watch?v=BWtD-jlqKxQ",
    "source": "https://github.com/Laksh-01/laksh_sachdeva_submission",
    "readmeSections": "AZ Winter Hackathon 2024: AI is Coming!\\n🚀 Chrome Extension Project 📺 Watch the Demo Video on YouTube. Explore the functionalities and features in action! 📖 Overview: This Chrome extension, developed for the AZ Winter Hackathon 2024, is specifically designed for maang.in. It showcases innovative features and solutions aimed at tackling real-world challenges. The extension leverages AI to provide problem-specific hints, solutions, and interactive support, making it an invaluable tool for developers and coding enthusiasts. ✨ Features: 🔄 SPA Functionality Handling – Ensures seamless performance across Single Page Applications (SPAs) by dynamically managing state and navigation changes. 🔐 API Key Input Popup – Users can securely input their Gemini API key via a dedicated popup. 💬 Mini Page with AI Chatbox – A button triggers a mini page containing an AI-powered chatbox for user interaction. 🤖 Problem-Specific AI Assistance – The AI is equipped with detailed information about each problem, including hints, solutions, and editorial code obtained by intercepting network requests. 🎯 Hint-Focused AI Guidance – The AI prioritizes providing concise, relevant hints for a better user experience. ❌ Automatic Mini Page Closure – Clicking outside the mini page closes it automatically for better usability. 🌗 Dark and Light Mode Support – Handled color combinations to ensure a visually appealing interface in both themes. 🗂️ Persistent Chat Context – Previous chat context is saved and can be accessed via the chatbox and local storage. 📋 Code Copy Functionality – Users can copy their current code directly from the extension. 🧹 Clear Chat History – Added functionality to clear the conversation between the user and the bot. 📎 Copy AI Responses – Users can copy AI responses for easy reference. 💡 Technical Highlights: 🤝 AI Integration – Utilized a Gemini API key for intelligent problem-solving and interaction. 💾 Local Storage Management – Efficiently stores chat context and user data for seamless re-engagement. 📡 Network Request Interception – Extracts problem-related data dynamically to enhance AI capabilities. 🎨 Dynamic UI Adaptation – Ensures compatibility with dark and light themes for better accessibility. 🛠️ How to Use: 🔧 Install the extension in your Chrome browser. 🔑 Open the extension popup and enter your Gemini API key. 🌐 Navigate to maang.in and interact with the AI by clicking the button to open the mini page. 💬 Use the chatbox to seek hints, solutions, or code from the AI. 📋 Copy responses or your code as needed, and clear conversations when done. 🌈 Enjoy a consistent experience across dark and light modes! 📈 Future Scope: 🌍 Expand platform compatibility. 📚 Enhance AI training for more complex problem-solving. 🎙️ Add voice interaction capabilities for hands-free operation. \\n\\n Embedded Projects Array: \\n [ {\"title\":\"AI-Powered Coding Assistant Chrome Extension\",\"description\":\"Built a context-aware Chrome extension using Gemini API for real-time coding help. Designed a sleek SPA UI with chat integration, prompt tuning, and chat history for improved user experience.\",\"skills\":[\"JS\",\"HTML\",\"CSS\"],\"demo\":\"https://www.youtube.com/watch?v=BWtD-jlqKxQ\",\"source\":\"https://github.com/Laksh-01/laksh_sachdeva_submission\",\"readme\":\"AZ Winter Hackathon 2024: AI is Coming!\\n🚀 Chrome Extension Project 📺 Watch the Demo Video on YouTube. Explore the functionalities and features in action! 📖 Overview: This Chrome extension, developed for the AZ Winter Hackathon 2024, is specifically designed for maang.in. It showcases innovative features and solutions aimed at tackling real-world challenges. The extension leverages AI to provide problem-specific hints, solutions, and interactive support, making it an invaluable tool for developers and coding enthusiasts. ✨ Features: 🔄 SPA Functionality Handling – Ensures seamless performance across Single Page Applications (SPAs) by dynamically managing state and navigation changes. 🔐 API Key Input Popup – Users can securely input their Gemini API key via a dedicated popup. 💬 Mini Page with AI Chatbox – A button triggers a mini page containing an AI-powered chatbox for user interaction. 🤖 Problem-Specific AI Assistance – The AI is equipped with detailed information about each problem, including hints, solutions, and editorial code obtained by intercepting network requests. 🎯 Hint-Focused AI Guidance – The AI prioritizes providing concise, relevant hints for a better user experience. ❌ Automatic Mini Page Closure – Clicking outside the mini page closes it automatically for better usability. 🌗 Dark and Light Mode Support – Handled color combinations to ensure a visually appealing interface in both themes. 🗂️ Persistent Chat Context – Previous chat context is saved and can be accessed via the chatbox and local storage. 📋 Code Copy Functionality – Users can copy their current code directly from the extension. 🧹 Clear Chat History – Added functionality to clear the conversation between the user and the bot. 📎 Copy AI Responses – Users can copy AI responses for easy reference. 💡 Technical Highlights: 🤝 AI Integration – Utilized a Gemini API key for intelligent problem-solving and interaction. 💾 Local Storage Management – Efficiently stores chat context and user data for seamless re-engagement. 📡 Network Request Interception – Extracts problem-related data dynamically to enhance AI capabilities. 🎨 Dynamic UI Adaptation – Ensures compatibility with dark and light themes for better accessibility. 🛠️ How to Use: 🔧 Install the extension in your Chrome browser. 🔑 Open the extension popup and enter your Gemini API key. 🌐 Navigate to maang.in and interact with the AI by clicking the button to open the mini page. 💬 Use the chatbox to seek hints, solutions, or code from the AI. 📋 Copy responses or your code as needed, and clear conversations when done. 🌈 Enjoy a consistent experience across dark and light modes! 📈 Future Scope: 🌍 Expand platform compatibility. 📚 Enhance AI training for more complex problem-solving. 🎙️ Add voice interaction capabilities for hands-free operation.\"}, {\"title\":\"mernChat - Real Time Chat App\",\"imageSrc\":\"projects/project.png\",\"description\":\"Built a real-time chat application with seamless low-latency messaging using WebSockets. Developed a secure backend with Express.js and JWT for authentication, paired with a dynamic React frontend for instant communication.\",\"skills\":[\"React\",\"Express\",\"Node\",\"WebSocket\"],\"demo\":\"https://www.example.com\",\"source\":\"https://github.com/Laksh-01/mernChat.com\",\"readme\":\"🚀 Chrome Extension Project Explore the functionalities and \"}, {\"title\":\"Project C\",\"imageSrc\":\"projects/project.png\",\"description\":\"This is a project made to learn the latest languages by building an app.\",\"skills\":[\"React\",\"Express\",\"Node\"],\"demo\":\"https://www.example.com\",\"source\":\"https://www.github.com\",\"readme\":\"🚀 Chrome Extension Project Explore the functionalities and \"} ]"
  },
  {
    "title": "mernChat - Real Time Chat App",
    "imageSrc": "projects/project.png",
    "description": "Built a real-time chat application with seamless low-latency messaging using WebSockets. Developed a secure backend with Express.js and JWT for authentication, paired with a dynamic React frontend for instant communication.",
    "skills": ["React", "Express", "Node", "WebSocket"],
    "demo": "https://www.example.com",
    "source": "https://github.com/Laksh-01/mernChat.com",
    "readme": "🚀 Chrome Extension Project Explore the functionalities and "
  },
  {
  "title": "🐄 Mastitis Detection Using IoT and Edge ML",
  "imageSrc": "projects/project.png",
  "description": "An educational full-stack web application built to explore and master the latest web technologies including React, Express, and Node.js. The app also integrates IoT features with Arduino for realtime sensor data monitoring and control.",
  "skills": ["React", "Arduino", "PowerBI" , "JS" , "MQTT"],
  "demo": "https://680a36ae0064d4215ce101d9--dainty-sopapillas-5863ac.netlify.app/",
  "source": "https://github.com/Laksh-01/Mastitis_Detection",
  "readme": "## Overview\n\nProject C is a learning-focused web app developed to practice modern web development skills. It showcases a seamless integration of frontend React with backend Express and Node.js.\n\n## Features\n- User registration and login with JWT authentication.\n- Dynamic CRUD operations on resources.\n- Responsive design compatible with all devices.\n\n## Installation\n1. Clone the repository.\n2. Run `npm install` in both frontend and backend folders.\n3. Start the backend server.\n4. Start the React frontend.\n\n## Usage\nNavigate to the app in your browser, register or login to manage your data. The app dynamically updates without full page reloads.\n\n## Future Improvements\n- Add real-time notifications using WebSockets.\n- Improve UI/UX with Material-UI.\n- Deploy on cloud services for public access."
},
{
  "title": "HyperAttentionDTI - Drug-Protein Interaction Prediction",
  "imageSrc": "projects/hyperattentiondti.png",
  "description": "A deep learning project predicting drug-protein interactions using sequence data and hyperattention mechanisms to capture spatial and channel dependencies, enhancing drug discovery accuracy.",
  "skills": ["Python", "Deep Learning", "PyTorch", "Attention Mechanisms"],
  "demo": "https://github.com/Laksh-01/HyperAttentionDTI", 
  "source": "https://github.com/Laksh-01/HyperAttentionDTI",
  "readme": "HyperAttentionDTI is a project that uses sequence-based data and advanced hyperattention modules to predict drug-protein interactions with improved accuracy. It captures intricate spatial and channel relationships between drug molecules and proteins, offering better interpretability for drug discovery. The repository includes code, data processing, training scripts, and evaluation metrics."
}


]
